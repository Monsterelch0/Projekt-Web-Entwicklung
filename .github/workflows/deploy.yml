name: Build & Deploy

on:
  push:
    branches: [main]

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and Push Frontend Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/casino-frontend ./frontend
        docker push ${{ secrets.DOCKER_USERNAME }}/casino-frontend

    - name: Build and Push Backend Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/casino-backend ./backend/api_casino
        docker push ${{ secrets.DOCKER_USERNAME }}/casino-backend

    - name: Deploy to Server using docker-compose.yml
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
           cd ~

            if [ ! -d "casino-deploy" ]; then
            git -c credential.helper= clone https://${{ secrets.GIT_TOKEN }}@github.com/${{ github.repository }} casino-deploy
            fi

            cd casino-deploy
            git pull origin main

            # .env erzeugen, falls nicht vorhanden
            if [ ! -f ".env" ]; then
            echo "DB_CONNECTION_STRING=${{ secrets.DB_CONNECTION_STRING }}" > .env
            fi

            docker compose --env-file .env pull
            docker compose --env-file .env down --remove-orphans
            docker compose --env-file .env up -d
